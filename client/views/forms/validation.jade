html
  body
    .page.page-form
      .row
        .col-md-6(data-ng-controller='formConstraintsCtrl')
          .panel.panel-default
            .panel-heading
              strong
                span.glyphicon.glyphicon-th
                |  Constraints
            .panel-body
              form.form-validation(name='form_constraints', novalidate='', data-ng-submit='submitForm()')
                .form-group
                  label(for='') Required
                  input.form-control(type='text', required='', data-ng-model='form.required')
                  br
                  textarea.form-control(rows='10', required='', data-ng-model='form.required_textarea')
                  br
                  input#required_checkbox(type='checkbox', required='', data-ng-model='form.required_checkbox')
                  label(for='required_checkbox') You need to agree to the Policy
                .form-group
                  label(for='') Min length 3 
                  input.form-control(type='text', required='', data-ng-minlength='3', data-ng-model='form.minlength')
                  span
                .form-group
                  label(for='') Max length 10
                  input.form-control(type='text', required='', data-ng-maxlength='10', data-ng-model='form.maxlength')
                  span
                .form-group
                  label(for='') Length from 3 to 10
                  input.form-control(type='text', required='', data-ng-minlength='3', data-ng-maxlength='10', data-ng-model='form.length_rage')
                  span
                .form-group
                  .row
                    .col-md-6
                      label(for='') Type something
                      input.form-control(type='text', required='', name='type_something', data-ng-trim='false', data-ng-model='form.type_something')
                      span
                    .col-md-6
                      label(for='') Confirm type
                      input.form-control(type='text', required='', name='confirm_type', data-ng-trim='false', data-ng-model='form.confirm_type', data-validate-equals='form.type_something')
                      span
                .form-group
                  label(for='') Equal to &quot;foo&quot;
                  input.form-control(type='text', required='', data-ng-model='form.foo', data-ng-pattern='/^foo$/')
                  span
                .form-group
                  label(for='') Email
                  input.form-control(type='email', required='', data-ng-model='form.email')
                  span
                .form-group
                  label(for='') Url
                  input.form-control(type='url', required='', data-ng-model='form.url')
                  span
                .form-group
                  label(for='') Must be a number
                  input.form-control(type='number', required='', name='form.num', data-ng-model='form.num')
                  span
                .form-group
                  label(for='') Number min value 3
                  input.form-control(type='number', required='', data-min='3', data-ng-model='form.minVal')
                  span
                .form-group
                  label(for='') Number max value 20
                  input.form-control(type='number', required='', data-max='20', data-ng-model='form.maxVal')
                  span
                .form-group
                  label(for='') Number value between 3 and 20
                  input.form-control(type='number', required='', data-min='3', data-max='20', data-ng-model='form.valRange')
                  span
                .form-group
                  label(for='') Match a pattern, e.g. hex color code
                  input.form-control(type='text', placeholder='Hex color code here, like #e5e5e5, or #fff', required='', data-ng-pattern='/^#(?:[0-9a-fA-F]{3}){1,2}$/', data-ng-model='form.pattern')
                  span
                button.btn.btn-success(type='submit', data-ng-disabled='!canSubmit()') Submit
                button.btn.btn-default(data-ng-disabled='!canRevert()', data-ng-click='revert()') Revert Changes
                .callout.callout-info
                  p Submit button will be active only when all fields are valid.
                  p Revert button will be active only when one or more fields is changed.
        .col-md-6
          .panel.panel-default
            .panel-heading
              strong
                span.glyphicon.glyphicon-th
                |  Sign in Form
            .panel-body(data-ng-controller='signinCtrl')
              form.form-horizontal.form-validation(name='form_signin', data-ng-submit='submitForm()')
                fieldset
                  .form-group
                    .col-sm-3
                      label(for='') Email
                    .col-sm-9
                      input.form-control(type='email', required='', data-ng-model='user.email')
                  .form-group
                    .col-sm-3
                      label(for='') Password
                    .col-sm-9
                      input.form-control(type='password', required='', data-ng-model='user.password')
                  button.btn.btn-success(type='submit', data-ng-disabled='!canSubmit()') Submit
                  button.btn.btn-default(data-ng-disabled='!canRevert()', data-ng-click='revert()') Revert Changes
                  .callout.callout-info
                    p Submit button will be active only when all fields are valid.
                    p Revert button will be active only when one or more fields is changed.
                  .divider
                  .alert.alert-info(data-ng-show='showInfoOnSubmit') This is just for demo. In real project, you will submit form with AJAX :)
          .panel.panel-default
            .panel-heading
              strong
                span.glyphicon.glyphicon-th
                |  Sign up Form
            .panel-body(data-ng-controller='signupCtrl')
              form.form-horizontal.form-validation(name='form_signup', data-ng-submit='submitForm()')
                .form-group
                  .col-sm-3
                    label(for='') User Name
                  .col-sm-9
                    input.form-control(type='text', placeholder='Min length 2, Max length 30', data-ng-model='user.name', required='', data-ng-minlength='2', data-ng-maxlength='30')
                .form-group
                  .col-sm-3
                    label(for='') Email
                  .col-sm-9
                    input.form-control(type='email', data-ng-model='user.email', required='')
                .form-group
                  .col-sm-3
                    label(for='') Password
                  .col-sm-9
                    input.form-control(type='password', placeholder='min length 6', data-ng-model='user.password', required='', data-ng-minlength='6')
                //
                  <div class="form-group">
                  <div class="col-sm-3">
                  <label for="">Confirm Password</label>
                  </div>
                  <div class="col-sm-9">
                  <input type="password"
                  class="form-control"
                  data-ng-model="user.confirmPassword"
                  required
                  data-validate-equals="user.password">
                  </div>
                  </div>
                .form-group
                  .col-sm-3
                    label(for='') Age
                  .col-sm-9
                    input.form-control(type='number', placeholder='Min value 0, max value 100', data-ng-model='user.age', required='', data-min='0', data-max='100')
                button.btn.btn-default.btn-block.btn-lg(type='submit', data-ng-disabled='!canSubmit()') Sign up
                .callout.callout-info
                  p Submit button will be active only when all fields are valid.
                .divider
                .alert.alert-info(data-ng-show='showInfoOnSubmit') This is just for demo. In real project, you will submit form with AJAX :)
